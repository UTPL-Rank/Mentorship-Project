/**
 * Calculate Home Statistics
 * ==========================================================
 * 
 * @author Bruno Esparza
 * 
 * @name CalculateHomeStatistics cron function name
 * 
 * Function Fires every day at 23h00
 * 
 * Firebase function that calculates the amount of data generated by the the mentors and the users.
 * 
 * The data that the function calculate is:
 * - Unique mentors that have been registered in the platform
 * - Unique students that have been registered in the platform
 * - Number of accompaniments that have been registered thought the platform
 */

import * as functions from 'firebase-functions';
import { ListAccompanimentsCurrentPeriod } from '../utils/accompaniments-utils';
import { ListMentorsCurrentPeriod } from '../utils/mentors-utils';
import { ListStudentsCurrentPeriod } from '../utils/student-utils';
import { dbFirestore } from '../utils/utils';


/**
 * Number of mentors in the current period
 */
async function countMentors() {
    const mentors = await ListMentorsCurrentPeriod();
    const emails = mentors.map(mentor => mentor.email);
    const uniqueEmails = [...new Set(emails)];

    return uniqueEmails.length;
}

/**
 * Number of students in the current period
 */
async function countStudents() {
    const students = await ListStudentsCurrentPeriod();
    const emails = students.map(student => student.email);
    const uniqueEmails = [...new Set(emails)];
    return uniqueEmails.length;
}

/**
 * Number of accompaniments in the current period
 */
async function countAccompaniments() {
    const accompaniments = await ListAccompanimentsCurrentPeriod();
    return accompaniments.length;
}


export const CalculateHomeStatistics = functions.pubsub.schedule('0 23 * * *')
    .onRun(async (_) => {
        const sources = [countMentors(), countStudents(), countAccompaniments()];
        const [mentors, students, accompaniments] = await Promise.all(sources);

        // TODO: move to correct file
        await dbFirestore.doc('pages/home').set({ statistics: { mentors, students, accompaniments } }, { merge: true });
    });